<?php

namespace App\Filament\App\Resources\ProductResource\Pages;

use App\Filament\App\Resources\ProductResource;
use App\Models\Product;
use Filament\Actions;
use Filament\Resources\Pages\ListRecords;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Support\Facades\Auth;
use Filament\Resources\Components\Tab;


class ListProducts extends ListRecords
{
    protected static string $resource = ProductResource::class;

    protected function getHeaderActions(): array
    {
        $user = Auth::user();
        $shop = $user->shop;
        $shopid = $user->shop_id;
        $shopInfo = $shop ? $shop->shopinfo : null;

        // Ensure $shopInfo is an object and check if shop_id matches
        if ($shopInfo && $shopInfo->shop_id == $shopid) {
            return [
                Actions\CreateAction::make(),
            ];
        }

        return [];
    }


    protected function getTableQuery(): ?Builder
    {
        $user = Auth::user();
        if (Auth::user()?->hasRole('admin')){
            return parent::getTableQuery()->where('shop_id',$user->shop_id); // TODO: Change the autogenerated stub
        }
        if ($user){
            return parent::getTableQuery()->where('shop_id',$user->shop_id); // TODO: Change the autogenerated stub
        }
        return parent::getTableQuery(); // TODO: Change the autogenerated stub
    }
    public function getTabs(): array
    {
        $pendingApprovalCount = Product::countPendingApproval();

        return [
            'Tất cả' => Tab::make()->query(fn ($query) => $query->where('pause', 0)),
            'Chờ duyệt (' . $pendingApprovalCount . ')' => Tab::make()->query(fn ($query) => $query->where('pause', 1)),
        ];
    }
}
