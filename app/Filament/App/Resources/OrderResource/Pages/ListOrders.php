<?php

namespace App\Filament\App\Resources\OrderResource\Pages;

use App\Filament\App\Resources\OrderResource;
use Filament\Actions;
use Filament\Resources\Components\Tab;
use Filament\Resources\Pages\ListRecords;
use Illuminate\Database\Eloquent\Builder;
use App\Models\User;
use Illuminate\Support\Facades\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\Order;
use App\Filament\App\Resources\OrderResource\Widgets\OrderStatus;


class ListOrders extends ListRecords
{
    protected static string $resource = OrderResource::class;

    protected function getHeaderActions(): array
    {
        return [
            Actions\CreateAction::make(),
            Actions\Action::make('Xem Báo Cáo')
                ->label('Xem Báo Cáo')
                ->url('/reports')

        ];
    }


//    protected function getHeaderWidgets(): array
//    {
//        return [OrderStatus::class];
//    }
    protected function getTableQuery(): ?Builder
    {
        $user = Auth::user();
        if (Auth::user()?->hasRole('admin')){
            return parent::getTableQuery()->where('shop_id',$user->shop_id); // TODO: Change the autogenerated stub
        }
        if ($user){
            return parent::getTableQuery()->where('shop_id',$user->shop_id); // TODO: Change the autogenerated stub
        }
        return parent::getTableQuery(); // TODO: Change the autogenerated stub
    }

    public function getTabs(): array
    {
        $processing = Order::processingStatus();
        $shipped = Order::shippedStatus();
        $Delivered = Order::deliveredStatus();
        // chuẩn bị hàng của shop
        $waitingdelivery = Order::waitingdelivery();
        $processedShop = Order::processedShop();
        return [
            'Tất cả' => Tab::make('Tất cả'),
            // đang xử lý (chờ super admin xử lý)
            'Chờ xác nhận ('.$processing.')' => Tab::make()->query(fn($query) => $query->where('status', 'Đang xử lý')),
            'Chờ lấy hàng ('.$waitingdelivery.')' => Tab::make()->query(fn($query) => $query->where('status', 'Chờ lấy hàng')),
            'Đã xử lý ('.$processedShop.')' =>  Tab::make()->query(fn($query) => $query->where('check_order_shop', 1)),
            'Vận chuyển ('.$shipped.')' => Tab::make()->query(fn($query) => $query->where('status', 'Đã vận chuyển')),
            'Thành công ('.$Delivered.')' => Tab::make()->query(fn($query) => $query->where('status', 'Đã giao hàng')),
            'Đơn huỷ' => Tab::make()->query(fn($query) => $query->where('status', 'Đã hủy bỏ'))
        ];
    }

    protected function getTableHeaderActions(): array
    {
        return [
            Actions\Action::make('delete')
                ->action(fn () => $this->getTableQuery()->delete())
                ->icon('heroicon-o-trash')
                ->color('danger')
                ->requiresConfirmation()
        ];
    }

}
